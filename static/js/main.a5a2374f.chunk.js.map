{"version":3,"sources":["component/Navig.js","component/LoginPage.js","component/home.js","component/personinfo.js","component/filminfo.js","component/about.js","component/contact.js","App.js","serviceWorker.js","index.js"],"names":["Navig","className","href","id","to","exact","activeStyle","color","localStorage","getItem","Fragment","Component","LoginPage","props","handleSubmit","event","preventDefault","name","value","pwd","persons","state","console","log","a","filter","x","birth_year","length","setItem","setState","isLoggedIn","handlesuccessfulAuth","error","removeItem","bind","this","history","push","axios","get","then","res","data","results","onSubmit","style","type","placeholder","ref","input","home","personinfo","persondata","filminfo","Container","Row","filmdata","map","film","index","Col","md","span","offset","split","item","key","about","name1","films","persons1","getname","indexOf","doubled","first","hair_color","eye_color","gender","skin_color","contact","ProtectedRoute","component","rest","render","App","loggedInStatus","user","path","About","Contact","React","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a5a2374f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom'; \r\n\r\n//import { Navbar,Nav } from 'react-bootstrap';\r\nexport class Navig extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light  bg-danger\">\r\n              <div className=\"navbar-brand\" href=\"#\">STARWAR</div>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\" > \r\n                <NavLink to=\"/Home\" exact activeStyle={{color:'green'}} className=\"nav-link text-indigo\">Home</NavLink> \r\n              </li> \r\n               \r\n              {localStorage.getItem(\"logindata\")?<React.Fragment>\r\n              <li  className=\"nav-item\"> \r\n                <NavLink to=\"/about\" exact activeStyle={{color:'green'}} className=\"nav-link\">About Us</NavLink> \r\n              </li>\r\n                 <li className=\"nav-item\" > \r\n                <NavLink to=\"/contact\" exact activeStyle={{color:'green'}} className=\"nav-link\">Contact Us</NavLink> \r\n              </li></React.Fragment>:''}\r\n             \r\n               \r\n              \r\n              \r\n              </ul>\r\n              \r\n      \r\n    \r\n    \r\n             </div>\r\n             {localStorage.getItem(\"logindata\")?\r\n             <ul className=\"navbar-nav ml-auto border border-warning rounded-pill  mb-2 bg-success text-white\">\r\n             <li className=\"nav-item   \"> \r\n                <NavLink to=\"/\" exact activeStyle={{color:'green'}} className=\"nav-link\">Logout</NavLink> \r\n              </li>\r\n              </ul>:<ul className=\"navbar-nav ml-auto border border-warning rounded-pill  mb-2 bg-success text-white\">\r\n             <li className=\"nav-item   \"> \r\n                <NavLink to=\"/\" exact activeStyle={{color:'green'}} className=\"nav-link\">Login</NavLink> \r\n              </li>\r\n              </ul>}\r\n             </nav>\r\n          \r\n  \r\n  \r\n\r\n\r\n\r\n  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Navig\r\n","import React, { Component } from 'react'\r\nimport './LoginPage.css'\r\n//import MainPage from './MainPage';\r\n//import Home from './home'; \r\nimport axios from 'axios';\r\nimport Nav from './Navig';\r\n\r\nexport class LoginPage extends Component {\r\n constructor(props) {\r\n     super(props)\r\n\r\n     localStorage.removeItem(\"logindata\"); //to check logOut..\r\n     console.log(localStorage.getItem(\"logindata\"));\r\n      this.state = {\r\n          isLoggedIn:0,\r\n          persons: [],\r\n          error:'',\r\n        \r\n     };\r\n     this.handleSubmit = this.handleSubmit.bind(this);\r\n     this.handlesuccessfulAuth=this.handlesuccessfulAuth.bind(this);\r\n }\r\n//handle the login page......\r\nhandlesuccessfulAuth()\r\n    {\r\n        //to move next page after login\r\n        //alert(\"hello gud work\");\r\n        this.props.history.push('/about');\r\n    }\r\n\r\n\r\n\r\n componentDidMount() {\r\n  axios.get(`https://swapi.dev/api/people/`)//http get request res=>respone https://jsonplaceholder.typicode.com/users\r\n    .then(res => {\r\n//console.log(res.data.results);\r\n  this.setState({ persons:res.data.results });\r\n \r\n   \r\n    }\r\n     )\r\n    }\r\nhandleSubmit=event=>\r\n    {\r\n    event.preventDefault();\r\n    const name = this.name.value;\r\n    const pwd = this.pwd.value;\r\n\r\n    \r\n    const {persons}=this.state;\r\n    console.log({persons})\r\n    const data =persons.filter(x=>x.name===name && x.birth_year ===pwd);\r\n    const a=data.length;\r\n    \r\n    \r\n    console.log(a);\r\n    if(a)\r\n    {\r\n            //alert('you are in');\r\n            localStorage.setItem('logindata',this.name.value);\r\n    console.log(localStorage.getItem('logindata'));//this is the way to store in local storage..\r\n    console.log('you are in');\r\n    this.setState({isLoggedIn:1});\r\n\r\n    this.handlesuccessfulAuth();\r\n   \r\n   // this.props.history.push(MainPage);\r\n          //const {persons}=this.state;\r\n         // console.log({persons})\r\n       \r\n    }\r\n    else\r\n    {\r\n      this.setState({error:'user name or dob is wrong'});\r\n      localStorage.removeItem('logindata');  \r\n    }\r\n    }\r\n    render() {\r\n    \r\n    return (\r\n      <React.Fragment>\r\n         <Nav />\r\n         {/*<h2>status:{this.props.loggedInStatus}</h2>*/}\r\n            <div  className=\"a\">\r\n           <div className=\"form-group\">\r\n           <form onSubmit={this.handleSubmit} >\r\n             <label style={{color:'red'}}> {this.state.error} </label>\r\n<br/>\r\n    <label >Name</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" ref={(input)=>this.name=input} />\r\n    <label >DOB</label>\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"DOB\" ref={(input)=>this.pwd=input}   />\r\n    <button  type=\"submit\" className=\"btn btn-success\">Login </button>\r\n    \r\n    </form>\r\n    </div> \r\n   \r\n    </div>\r\n    </React.Fragment>\r\n    )\r\n    }\r\n}\r\n\r\nexport default LoginPage\r\n\r\n","import React, { Component } from 'react'\r\nimport Nav from './Navig';\r\nexport class home extends Component {\r\n   \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div >\r\n            <Nav />\r\n           <h1>this is home page</h1>\r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default home\r\n","import React, { Component } from 'react'\r\n\r\nexport class personinfo extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.persondata}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default personinfo\r\n","import React, { Component } from 'react'\r\nimport {Container,Row,Col } from 'react-bootstrap';\r\nexport class filminfo extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*this.props.filmdata*/}\r\n                <Container>\r\n                <Row>\r\n               {this.props.filmdata.map((film,index) => < >\r\n                   \r\n                 { index<3 ?\r\n                   <Col md={{ span:3,offset:1}} className=\"text-white bg-success\">\r\n                   {film.split('\\n').map((item, index) => {\r\n    return (index === 0) ? item : [<br key={index} />, item]\r\n  })}\r\n                \r\n</Col> :''   }\r\n                   </>)} \r\n                   </Row>\r\n                   <br/>\r\n                   <br/>\r\n                <Row>\r\n               {this.props.filmdata.map((film,index) => < >\r\n                   \r\n                 { index>=3 ?\r\n                   <Col md={{ span:3,offset:1}} className=\"text-white bg-success\">\r\n                   {film.split('\\n').map((item, index) => {\r\n    return (index === 0) ? item : [<br key={index} />, item]\r\n  })}\r\n                \r\n</Col> :''   }\r\n                   </>)} \r\n                   </Row>\r\n                   </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default filminfo\r\n","import React, { Component } from 'react'\r\nimport Nav from './Navig';\r\nimport axios from 'axios';\r\nimport PersonInfo from './personinfo';\r\nimport Filminfo from './filminfo';\r\n//import UserData from './Userdata';\r\nexport class about extends Component {\r\n    state = {\r\n        persons: [],\r\n        name1 : '',\r\n        films: [],\r\n        persons1: [],\r\n        persondata:'',\r\n      }\r\n\r\n      async componentDidMount() {\r\n        axios.get(`https://swapi.dev/api/people/`)//http get request res=>respone https://jsonplaceholder.typicode.com/users\r\n          .then(res => {\r\n          //console.log(res.data.results);\r\n        \r\n         this.setState({ persons:res.data.results });\r\n         const {persons}=this.state;\r\n         console.log(persons);//get all data of persons..\r\n         \r\n        //////////////////\r\n         const name=localStorage.getItem(\"logindata\");\r\n         this.setState({name1:name});\r\n        console.log(name +\"you are login\");//the name of person who is login..\r\n         //////////////////getting the index of the person who is logged in......\r\n         const getname = persons.map((persons) => persons.name===name).indexOf(true);\r\n         console.log(getname);\r\n         ///////////////////\r\n         //Getting  all the films data...\r\n         const doubled = persons.map((persons) => persons.films);\r\n         console.log(doubled);\r\n         //getting the index... 0... according to name... array data\r\n         let first = doubled[getname];\r\n          const data=\"Hair Color:\\t\"+persons[getname].hair_color+\r\n          \"\\tEye Color:\\t\"+persons[getname].eye_color+\"\\tGender:\\t\"+persons[getname].gender\r\n          +\"\\tSkinColor:\\t\"+persons[getname].skin_color;\r\n          this.setState({ persondata:data});\r\n         console.log(first);\r\n         //const first1 = first.map((first) => first );\r\n        //console.log(\"hello\"+first1);\r\n        // this.setState({films:first});\r\n       const film=[];\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n       first.map(((value, index) => //to print all the index...\r\n        axios.get(first[index])\r\n        .then(res => {\r\n        //console.log(persons1);\r\n        this.setState({ persons1:res.data });\r\n        const {persons1}=this.state;\r\n         console.log(persons1);//get all data of persons..\r\n        console.log(persons1['title']+persons1['episode_id']+persons1['director']+persons1['release_date']+persons1['producer']+persons1['opening_crawl']);\r\n      film.push(\"episode:\\t\"+persons1['episode_id']+\"\\n\"+persons1['release_date']+\"\\n\"+persons1['title']+\"\\n\"+persons1['opening_crawl']+\"\\n\"+persons1['director']+\"\\n\"+persons1['producer'])\r\n      this.setState({films:film});\r\n\r\n      })));\r\n          }\r\n         \r\n          \r\n          )\r\n        \r\n      } //printing only zero index data from that array\r\n      //console.log(first[0])\r\n//var second =first[0] ;//get index 0 film....\r\n//console.log(second);\r\n//Above API...\r\n     \r\n    render() {\r\n      \r\n       //const {persons}=this.state;\r\n        return (\r\n            <div>\r\n                 <Nav />\r\n                \r\n\r\n              <h1>  welcome {this.state.name1}</h1>\r\n            <PersonInfo persondata={this.state.persondata} />\r\n             <Filminfo filmdata= {this.state.films}  />\r\n              \r\n       {/* {this.state.persons.map((persons) => persons.name===this.state.name1?<h1 key={persons.name}>{persons.name}{persons.mass}</h1>:'')}  */}\r\n       <ul>\r\n     {/*  { this.state.persons.map(persons => <li key={persons.name}>{persons.name}</li>)} */}\r\n      </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default about\r\n","import React, { Component } from 'react'\r\nimport Nav from './Navig';\r\nexport class contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <Nav />\r\n              contact page  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default contact\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n//import PersonList from './Components/PersonList'\r\nimport Login from './component/LoginPage';\r\n\r\n//import React, { Component } from 'react'; \r\nimport { BrowserRouter as Router, Route, Switch,Redirect } from 'react-router-dom'; \r\nimport Home from './component/home'; \r\nimport About, { about } from './component/about'; \r\nimport Contact from './component/contact'; \r\n//import MainPage from './component/MainPage';\r\n\r\nconst ProtectedRoute =({ component: Component, ...rest }) => {\r\nreturn <Route {...rest} render={(props) =>{             \r\nreturn localStorage.getItem('logindata') ? <Component {...props} />: <Redirect\r\nto=\"/\" />\r\n\r\n}     }/>\r\n\r\n\r\n\r\n}\r\n\r\n\r\nclass App extends React.Component { \r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       loggedInStatus:\"Not Logged In\",\r\n       user:{}\r\n    }\r\n  }\r\n  \r\n  render() { \r\n    return ( \r\n      <React.Fragment>\r\n       <Router> \r\n         <Switch> \r\n            \r\n            {/* <Route exact path='/' component={Home}></Route> */}\r\n\r\n            <Route exact\r\n              path='/Home'\r\n              render ={props=>(<Home {...props} loggedInStatus={this.state.loggedInStatus} />)} \r\n              \r\n             />\r\n             <Route exact\r\n              path='/'\r\n              render ={props=>(<Login {...props} loggedInStatus={this.state.loggedInStatus} />)} \r\n              \r\n             />\r\n\r\n            {/* <Route exact path='/LoginPage' component={Login}></Route> */}\r\n              <ProtectedRoute exact path='/about' component={About}></ProtectedRoute> \r\n             {/*  <Route exact\r\n              path='/about'\r\n              render ={props=>(<About {...props} loggedInStatus={this.state.loggedInStatus} />)} \r\n              \r\n             />*/}\r\n              <ProtectedRoute exact path='/contact' component={Contact}></ProtectedRoute> \r\n              {/*<Route exact\r\n              path='/contact'\r\n              render ={props=>(<Contact {...props} loggedInStatus={this.state.loggedInStatus} />)} \r\n              \r\n             />*/}\r\n              <Route exact\r\n              path='/About'\r\n              render ={props=>(<about {...props} loggedInStatus={this.state.loggedInStatus} />)} \r\n              \r\n             />\r\n            </Switch> \r\n          {/*<Login />*/}\r\n       </Router> \r\n       </React.Fragment>\r\n   ); \r\n  } \r\n} \r\n \r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}